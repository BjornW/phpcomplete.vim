!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
aliased_name	generator/functions.php	/^    $aliased_name = trim(str_replace("\\n", '', $refname->item(0)->textContent));$/;"	v
array_index_by_col	generator/tools.php	/^function array_index_by_col($arr, $col, $overwrite_duplicate = true) {$/;"	f
build_menu_info_string	generator/tools.php	/^function build_menu_info_string($signature) {$/;"	f
class	generator/classes.php	/^    $class = $xpath->query('\/\/div[@class="classsynopsis"]\/div[@class="classsynopsisinfo"]\/*[@class="ooclass"]\/*[@class="classname"]')->item(0);$/;"	v
class_const_nodes	generator/constants.php	/^        $class_const_nodes = $xpath->query('\/\/*[@class="classsynopsis"]\/*[@class="fieldsynopsis"]\/*[@class="modifier" and text() = "const"]\/..');$/;"	v
class_constant	generator/constants.php	/^            $class_constant = handle_class_const($xpath, $node, $file);$/;"	v
class_files	generate_builtin_dicts.php	/^    \/\/ $class_files = glob("{$argv[1]}\/class.domdocument.html");$/;"	v
class_name	generator/classes.php	/^        $class_name = extract_class_name($xpath, $file);$/;"	v
classname	generator/classes.php	/^    $classname = extract_class_name($xpath);$/;"	v
classname	generator/classes.php	/^    $classname = trim($class->textContent);$/;"	v
constant	generator/constants.php	/^    foreach ($constants as $constant => $file) {$/;"	v
constants	generate_builtin_dicts.php	/^    \/\/ $constants = extract_constant_names($function_files);$/;"	v
constants	generator/constants.php	/^            \/\/ regexp lifted from http:\/\/php.net\/manual\/en\/language.constants.php added ":" so we can pick up class constants$/;"	c
constants	generator/constants.php	/^        \/\/ most class constants are inside the Class synopsis blocks,$/;"	c
constants	generator/constants.php	/^    $constants = array();$/;"	v
constname	generator/classes.php	/^    $constname = $xpath->query('var\/\/var[@class="varname"]', $node)->item(0);$/;"	v
constname	generator/classes.php	/^    $constname = trim($constname->textContent);$/;"	v
doc	generator/classes.php	/^        $doc = new DOMDocument;$/;"	v
doc	generator/constants.php	/^        $doc = new DOMDocument;$/;"	v
doc	generator/functions.php	/^        $doc = new DOMDocument;$/;"	v
extract_class_name	generator/classes.php	/^function extract_class_name($xpath) {$/;"	f
extract_class_signatures	generator/classes.php	/^function extract_class_signatures($files) {$/;"	f
extract_constant_names	generator/constants.php	/^function extract_constant_names($files) {$/;"	f
extract_function_signatures	generator/functions.php	/^function extract_function_signatures($files) {$/;"	f
fd	generator/classes.php	/^    $fd = fopen($outpath, 'w');$/;"	v
fd	generator/constants.php	/^    $fd = fopen($outpath, 'w');$/;"	v
fd	generator/functions.php	/^    $fd = fopen($outpath, 'w');$/;"	v
full_signature	generator/functions.php	/^    $full_signature = "$name â€” Alias of $aliased_name";$/;"	v
full_signature	generator/functions.php	/^    $full_signature = preg_replace('\/\\s+\/', ' ', trim(str_replace(array("\\n", "\\t", "\\r"), "", $nodes->textContent)));$/;"	v
function_files	generate_builtin_dicts.php	/^    $function_files = glob("{$argv[1]}\/function.*.html");$/;"	v
function_files	generate_builtin_dicts.php	/^    \/\/ $function_files = glob("{$argv[1]}\/*.html");$/;"	v
handle_class_const	generator/classes.php	/^function handle_class_const($xpath, $node, $file) {$/;"	f
handle_func_alias	generator/functions.php	/^function handle_func_alias($xpath, $nodes, $file) {$/;"	f
handle_func_def	generator/functions.php	/^function handle_func_def($xpath, $nodes, $file) {$/;"	f
handle_method_def	generator/classes.php	/^function handle_method_def($xpath, $node, $file) {$/;"	f
i	generator/classes.php	/^    foreach ($methodparams as $i => $param) {$/;"	v
i	generator/tools.php	/^    foreach ($signature['params'] as $i => $param) {$/;"	v
is	generator/functions.php	/^            $nodes = $xpath->query('\/\/div[contains(@class, "description")]\/p[@class="simpara"][contains(text(), "This function is an alias of:")]');$/;"	f
istr	generator/tools.php	/^    $istr = '';$/;"	v
main	generate_builtin_dicts.php	/^function main($argv){$/;"	f
method	generate_builtin_dicts.php	/^    \/\/ print "extracted ".count($signatures)." built-in class method\\n";$/;"	c
method_nodes	generator/classes.php	/^        $method_nodes = $xpath->query('\/\/div[@class="classsynopsis"]\/\/div[contains(@class, "constructorsynopsis") or contains(@class, "methodsynopsis")]');$/;"	v
methodname	generator/classes.php	/^    $methodname = $xpath->query('*[@class="methodname"]\/*[@class="methodname"]', $node);$/;"	v
methodname	generator/classes.php	/^    $methodname = preg_replace('\/^\\w+::\/', '', trim($methodname->item(0)->textContent));$/;"	v
methodname	generator/classes.php	/^    if ($type->length === 0 && !($methodname == '__construct' || $methodname == '__destruct' || $methodname == $classname)) {$/;"	v
methodname	generator/functions.php	/^    $methodname = $xpath->query('*[@class="methodname"]\/*', $nodes);$/;"	v
methodname	generator/functions.php	/^    $methodname = $xpath->query('\/\/h1[@class="refname"]');$/;"	v
methodparams	generator/classes.php	/^    $methodparams = $xpath->query('*[@class="methodparam"]', $node);$/;"	v
methodparams	generator/functions.php	/^    $methodparams = $xpath->query('*[@class="methodparam"]', $nodes);$/;"	v
name	generator/classes.php	/^        fwrite(STDERR, 'extraction error, cant find class name name in '.$file);$/;"	c
name	generator/classes.php	/^    \/\/ chop of class name from the inherited method names$/;"	c
name	generator/functions.php	/^            \/\/ more than one signature for a single function name$/;"	f
name	generator/functions.php	/^    $name = trim(str_replace("\\n", '', $methodname->item(0)->textContent));$/;"	v
nodes	generator/constants.php	/^        $nodes = $xpath->query('\/\/strong\/code[translate(text(), "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ") = text()]');$/;"	v
nodes	generator/functions.php	/^            $nodes = $xpath->query('\/\/div[contains(@class, "description")]\/p[@class="simpara"][contains(text(), "This function is an alias of:")]');$/;"	v
nodes	generator/functions.php	/^        $nodes = $xpath->query('\/\/div[contains(@class, "methodsynopsis")]');$/;"	v
optional	generator/classes.php	/^            $optional = true;$/;"	v
optional	generator/classes.php	/^    $optional = false;$/;"	v
optional	generator/functions.php	/^            $optional = true;$/;"	v
optional	generator/functions.php	/^    $optional = false;$/;"	v
optional_depth	generator/tools.php	/^    $optional_depth = 0;$/;"	v
overwrite_duplicate	generator/tools.php	/^function array_index_by_col($arr, $col, $overwrite_duplicate = true) {$/;"	v
p	generator/classes.php	/^            $p = array($/;"	v
p	generator/functions.php	/^            $p = array($/;"	v
paramdefault	generator/classes.php	/^        $paramdefault = $xpath->query('*[@class="initializer"]', $param);$/;"	v
paramdefault	generator/functions.php	/^        $paramdefault = $xpath->query('*[@class="initializer"]', $param);$/;"	v
paramname	generator/classes.php	/^        $paramname = $xpath->query('*[contains(@class, "parameter")]', $param);$/;"	v
paramname	generator/functions.php	/^        $paramname = $xpath->query('*[contains(@class, "parameter")]', $param);$/;"	v
params	generator/classes.php	/^    $params = array();$/;"	v
params	generator/functions.php	/^    $params = array();$/;"	v
paramtype	generator/classes.php	/^        $paramtype = $xpath->query('*[@class="type"]', $param);$/;"	v
paramtype	generator/functions.php	/^        $paramtype = $xpath->query('*[@class="type"]', $param);$/;"	v
re	generator/classes.php	/^    $re = array($/;"	v
refname	generator/functions.php	/^    $refname = $xpath->query('\/\/*[contains(@class, "description")]\/p[@class="simpara"]\/*[@class="methodname" or @class="function"]');$/;"	v
signatures	generate_builtin_dicts.php	/^    $signatures = extract_function_signatures($function_files);$/;"	v
signatures	generate_builtin_dicts.php	/^    \/\/ $signatures = extract_class_signatures($class_files);$/;"	v
signatures	generator/classes.php	/^    $signatures = array();$/;"	v
signatures	generator/classes.php	/^    $signatures = array_index_by_col($signatures, 'name', false);$/;"	v
signatures	generator/functions.php	/^    $signatures = array();$/;"	v
signatures	generator/functions.php	/^    $signatures = array_index_by_col($signatures, 'name', false);$/;"	v
tmp	generator/tools.php	/^	$tmp = array();$/;"	v
type	generator/classes.php	/^    $type = $xpath->query('span[@class="type"]', $node);$/;"	v
type	generator/functions.php	/^    $type = $xpath->query('span[@class="type"]', $nodes);$/;"	v
usage	generate_builtin_dicts.php	/^function usage($argv) {$/;"	f
write_class_signatures_to_vim_hash	generator/classes.php	/^function write_class_signatures_to_vim_hash($signatures, $outpath) {$/;"	f
write_constant_names_to_vim_hash	generator/constants.php	/^function write_constant_names_to_vim_hash($constants, $outpath) {$/;"	f
write_function_signatures_to_vim_hash	generator/functions.php	/^function write_function_signatures_to_vim_hash($signatures, $outpath) {$/;"	f
xpath	generator/classes.php	/^        $xpath = new DOMXpath($doc);$/;"	v
xpath	generator/constants.php	/^        $xpath = new DOMXpath($doc);$/;"	v
xpath	generator/functions.php	/^        $xpath = new DOMXpath($doc);$/;"	v
